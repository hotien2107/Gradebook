import { ControlPoint } from "@mui/icons-material";
import { Typography } from "@mui/material";
import { MongoClient } from "mongodb";
import Head from "next/head";
import { Fragment, useState } from "react";
import Classes from "../components/class/Classes";
import NewClass from "../components/class/NewClass";

export default function Home({ classesData }) {
  const [openAddClass, setOpenAddClass] = useState(false);
  const [openJoinClass, setOpenJoinClass] = useState(false);

  return (
    <Fragment>
      <Head>
        <title>Class</title>
        <meta name="description" content="Generated by create next app" />
      </Head>

      <div className="group-title">
        <Typography variant="h5" mt={2} mb={2} className="title">
          All Classes
        </Typography>
        <ControlPoint
          className="icon icon--add"
          onClick={() => setOpenAddClass(true)}
        />
      </div>
      {openAddClass ? <NewClass onClose={() => setOpenAddClass(false)} /> : ""}
      <Classes data={classesData} />
    </Fragment>
  );
}

export async function getStaticProps() {
  const url = process.env.DB_URL;

  const client = await MongoClient.connect(url);

  const db = client.db();

  const meetupCollection = db.collection("myClasses");

  const data = await meetupCollection
    .find({
      $or: [
        { teacher: "Nguyen Huy Khanh" },
        { student: { name: "Nguyen Van A" } },
      ],
    })
    .toArray();

  client.close();

  const dataFormated = data.map((item) => ({
    id: item._id.toString(),
    title: item.name,
    image: item.image,
    description: item.description,
  }));

  return {
    props: {
      classesData: dataFormated,
    },
    revalidate: 1,
  };
}
